// chat.js - –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞.
 * @param {HTMLElement} container - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω —á–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, ShadowRoot).
 */
function initChat(container) {
  // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  const chatMessages = container.querySelector("#chatMessages");
  const chatInput = container.querySelector("#chatInput");
  const chatTopics = container.querySelectorAll(".chat-topic");
  const chatList = container.querySelector("#chatList");
  const quickQuestionsContainer = container.querySelector("#quickQuestions");
  const chatContainer = container.querySelector(".chat-container");
  const chatSidebar = container.querySelector(".chat-sidebar");
  const chatContent = container.querySelector(".chat-content");
  const chatHeader = container.querySelector(".chat-header");

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º
  let isMobile = window.innerWidth <= 800;

  // –ù–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ —Å–º–∞–π–ª–æ–≤
  const attachmentIcon = container.querySelector("#attachmentIcon");
  const smileyIcon = container.querySelector("#smileyIcon");
  const fileUploadPopup = container.querySelector("#fileUploadPopup");
  const fileInput = container.querySelector("#fileInput");
  const emojiPicker = container.querySelector("#emojiPicker");

  // –≠–ª–µ–º–µ–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  let backButton, searchIcon, headerSearchContainer, searchResults;
  let sidebarSearchContainer, sidebarSearchInput;
  let sendButtonOrigText;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  let originalFileUploadContent = null;
  if (fileUploadPopup) {
    originalFileUploadContent = fileUploadPopup.innerHTML;
  }

  // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤
  let currentChat = null; // –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
  let currentTopic = null; // –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–º—É —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
  const chats = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–æ–≤ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º id
  let currentSearchQuery = ""; // –¢–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
  let headerSearchContainerOriginal = null; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏

  // –û–±—ä–µ–∫—Ç —Å –±—ã—Å—Ç—Ä—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
  const quickQuestionsPerTopic = {
    orders: [
      "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞?",
      "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏?",
      "–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?",
      "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –º–æ–π –∑–∞–∫–∞–∑?",
      "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä–Ω—ã–π —á–µ–∫?",
      "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞?",
      "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è?",
    ],
    returns: [
      "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞?",
      "–ö–∞–∫–æ–≤–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤?",
      "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤–æ–∑–≤—Ä–∞—Ç–∞?",
      "–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞?",
      "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç?",
      "–ú–æ–∂–Ω–æ –ª–∏ –æ–±–º–µ–Ω—è—Ç—å —Ç–æ–≤–∞—Ä?",
      "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞?",
    ],
    support: [
      "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
      "–ö–∞–∫ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å?",
      "–ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç, –ø–æ–º–æ–≥–∏—Ç–µ.",
      "–ü–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
      "–ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?",
      "–ö–∞–∫ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ?",
      "–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–ª–∏–µ–Ω—Ç–æ–≤?",
    ],
  };

  // –û–±—ä–µ–∫—Ç —Å –∏–∫–æ–Ω–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
  const chatIcons = {
    orders: "üì¶",
    returns: "üîÑ",
    support: "‚öôÔ∏è",
    general: "üí¨",
  };

  // –û–±—ä–µ–∫—Ç —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
  const initialMessagesPerTheme = {
    orders: [
      {
        sender: "bot",
        text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º?",
      },
    ],
    returns: [
      {
        sender: "bot",
        text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ç–æ–≤–∞—Ä–∞?",
      },
    ],
    support: [
      {
        sender: "bot",
        text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö?",
      },
    ],
    general: [
      {
        sender: "bot",
        text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?",
      },
    ],
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –∏ –¥–∏–∞–ª–æ–≥–æ–≤
  let intents = []; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ JSON-—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
  let dialogues = []; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
  let nextChatId = 1; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ id —á–∞—Ç–∞

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  function saveDesktopSearch() {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    headerSearchContainerOriginal = container.querySelector(
      "#headerSearchContainer"
    );
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  function createMobileElements() {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏, –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω
    if (!headerSearchContainerOriginal) {
      saveDesktopSearch();
    }

    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫
    if (headerSearchContainerOriginal) {
      headerSearchContainerOriginal.style.display = "none";
    }

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    backButton = document.createElement("span");
    backButton.classList.add("back-button", "ri-arrow-left-line");
    backButton.style.display = "none"; // –°–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    backButton.title = "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É —á–∞—Ç–æ–≤";

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const headerTitle = chatHeader.querySelector("h2");
    if (headerTitle) {
      headerTitle.insertBefore(backButton, headerTitle.firstChild);
    }

    // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É –ø–æ–∏—Å–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    searchIcon = document.createElement("span");
    searchIcon.classList.add("search-icon", "ri-search-line");
    chatHeader.appendChild(searchIcon);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
    headerSearchContainer = document.createElement("div");
    headerSearchContainer.classList.add("header-search-container");

    const searchCloseBtn = document.createElement("span");
    searchCloseBtn.classList.add("search-close", "ri-arrow-left-line");

    const searchInput = document.createElement("input");
    searchInput.type = "text";
    searchInput.placeholder = "–ü–æ–∏—Å–∫...";

    headerSearchContainer.appendChild(searchCloseBtn);
    headerSearchContainer.appendChild(searchInput);
    chatHeader.appendChild(headerSearchContainer);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    searchResults = document.createElement("div");
    searchResults.classList.add("header-search-results");
    headerSearchContainer.appendChild(searchResults);

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –≤ —Å–∞–π–¥–±–∞—Ä
    sidebarSearchContainer = document.createElement("div");
    sidebarSearchContainer.classList.add("sidebar-search-container");

    sidebarSearchInput = document.createElement("input");
    sidebarSearchInput.type = "text";
    sidebarSearchInput.placeholder = "–ü–æ–∏—Å–∫ –ø–æ —á–∞—Ç–∞–º...";

    sidebarSearchContainer.appendChild(sidebarSearchInput);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "–ú–æ–∏ —á–∞—Ç—ã"
    if (chatSidebar.querySelector("h3")) {
      chatSidebar.insertBefore(
        sidebarSearchContainer,
        chatSidebar.querySelector("h3").nextSibling
      );
    } else {
      const sidebarTitle = document.createElement("h3");
      sidebarTitle.textContent = "–ú–æ–∏ —á–∞—Ç—ã";
      chatSidebar.insertBefore(sidebarTitle, chatSidebar.firstChild);
      chatSidebar.insertBefore(
        sidebarSearchContainer,
        sidebarTitle.nextSibling
      );
    }

    // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –Ω–∞ –∏–∫–æ–Ω–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–∞
    const sendButton = container.querySelector(".send-button");
    if (sendButton) {
      sendButtonOrigText = sendButton.textContent;
      sendButton.innerHTML = '<i class="ri-send-plane-fill"></i>';
      sendButton.style.width = "40px";
      sendButton.style.height = "40px";
      sendButton.style.padding = "0";
      sendButton.style.display = "flex";
      sendButton.style.alignItems = "center";
      sendButton.style.justifyContent = "center";
    }

    // –î–µ–ª–∞–µ–º –∏–∫–æ–Ω–∫–∏ —ç–º–æ–¥–∑–∏ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ
    if (smileyIcon) {
      smileyIcon.style.fontSize = "22px";
      smileyIcon.style.margin = "0 5px";
      smileyIcon.style.padding = "5px";
    }

    if (attachmentIcon) {
      attachmentIcon.style.fontSize = "22px";
      attachmentIcon.style.margin = "0 5px";
      attachmentIcon.style.padding = "5px";
    }

    // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    if (fileUploadPopup) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
      if (!originalFileUploadContent) {
        originalFileUploadContent = fileUploadPopup.innerHTML;
      }

      // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –±–µ–∑ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
      const simplifiedContent = `
        <div class="popup-content">
          <h3>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª</h3>
          <label for="fileInput" class="file-button">–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª</label>
          <input type="file" id="fileInput" multiple style="display:none;">
        </div>
      `;
      fileUploadPopup.innerHTML = simplifiedContent;

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ input –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è HTML
      const newFileInput = fileUploadPopup.querySelector("#fileInput");
      if (newFileInput) {
        newFileInput.addEventListener("change", (e) => {
          const files = e.target.files;
          handleFiles(files);
          newFileInput.value = "";
          toggleFileUploadPopup(false);
        });
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–ª—è —ç–º–æ–¥–∑–∏-–ø–∏–∫–µ—Ä–∞
    if (emojiPicker) {
      emojiPicker.style.maxHeight = "250px";
      emojiPicker.style.overflowY = "auto";
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    backButton.addEventListener("click", function (e) {
      e.stopPropagation();
      showMobileChatList();
    });

    searchIcon.addEventListener("click", function () {
      headerSearchContainer.classList.add("active");
      searchInput.focus();
    });

    searchCloseBtn.addEventListener("click", function () {
      headerSearchContainer.classList.remove("active");
      searchInput.value = "";
      searchResults.classList.remove("active");
    });

    searchInput.addEventListener("input", function () {
      const query = this.value.trim();
      if (query.length > 0) {
        performMobileSearch(query);
        searchResults.classList.add("active");
      } else {
        searchResults.classList.remove("active");
      }
    });

    // –ü–æ–∏—Å–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ
    sidebarSearchInput.addEventListener("input", function () {
      const query = this.value.trim().toLowerCase();
      const chatItems = container.querySelectorAll(".chat-list-item");

      chatItems.forEach((item) => {
        const chatTitle = item
          .querySelector(".chat-info h4")
          .textContent.toLowerCase();
        if (chatTitle.includes(query) || query === "") {
          item.style.display = "flex";
        } else {
          item.style.display = "none";
        }
      });
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–µ—Å–∫—Ç–æ–ø—É
  function removeMobileElements() {
    // –£–¥–∞–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    if (backButton) backButton.remove();
    if (searchIcon) searchIcon.remove();
    if (headerSearchContainer) headerSearchContainer.remove();
    if (sidebarSearchContainer) sidebarSearchContainer.remove();

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    const sendButton = container.querySelector(".send-button");
    if (sendButton && sendButtonOrigText) {
      sendButton.innerHTML = sendButtonOrigText;
      sendButton.style.width = "";
      sendButton.style.height = "";
      sendButton.style.padding = "";
      sendButton.style.display = "";
      sendButton.style.alignItems = "";
      sendButton.style.justifyContent = "";
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∫–æ–Ω–∫–∏
    if (smileyIcon) {
      smileyIcon.style.fontSize = "";
      smileyIcon.style.margin = "";
      smileyIcon.style.padding = "";
    }

    if (attachmentIcon) {
      attachmentIcon.style.fontSize = "";
      attachmentIcon.style.margin = "";
      attachmentIcon.style.padding = "";
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–∫–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    if (fileUploadPopup && originalFileUploadContent) {
      fileUploadPopup.innerHTML = originalFileUploadContent;

      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è drag and drop
      const dropArea = fileUploadPopup.querySelector(".drop-area");
      const fileInput = fileUploadPopup.querySelector("#fileInput");

      if (fileInput) {
        fileInput.addEventListener("change", (e) => {
          const files = e.target.files;
          handleFiles(files);
          fileInput.value = "";
          toggleFileUploadPopup(false);
        });
      }

      if (dropArea) {
        dropArea.addEventListener("dragover", (e) => {
          e.preventDefault();
          dropArea.classList.add("dragover");
        });

        dropArea.addEventListener("dragleave", (e) => {
          e.preventDefault();
          dropArea.classList.remove("dragover");
        });

        dropArea.addEventListener("drop", (e) => {
          e.preventDefault();
          dropArea.classList.remove("dragover");
          const files = e.dataTransfer.files;
          handleFiles(files);
          toggleFileUploadPopup(false);
        });
      }
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    if (headerSearchContainerOriginal) {
      headerSearchContainerOriginal.style.display = "";
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏ —ç–º–æ–¥–∑–∏-–ø–∏–∫–µ—Ä–∞
    if (emojiPicker) {
      emojiPicker.style.maxHeight = "";
      emojiPicker.style.overflowY = "";
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  function handleResize() {
    const newIsMobile = window.innerWidth <= 800;
    if (isMobile !== newIsMobile) {
      isMobile = newIsMobile;

      if (isMobile) {
        createMobileElements();
        adjustForMobile();
      } else {
        removeMobileElements();
        resetToDesktopView();
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  function adjustForMobile() {
    if (!isMobile) return;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (currentChat === null) {
      showMobileChatList();
    } else {
      showMobileChat();
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω
    updatePopupPositions();
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  function showMobileChatList() {
    if (!isMobile) return;

    chatSidebar.classList.remove("hidden");
    chatContent.classList.remove("active");

    if (backButton) backButton.style.display = "none";

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const headerTitle = chatHeader.querySelector("h2");
    if (headerTitle) {
      headerTitle.textContent = "–ß–∞—Ç 1-2.SU";
      if (backButton)
        headerTitle.insertBefore(backButton, headerTitle.firstChild);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
  function showMobileChat() {
    if (!isMobile) return;

    chatSidebar.classList.add("hidden");
    chatContent.classList.add("active");

    if (backButton) backButton.style.display = "inline-block";

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ç–µ–º–æ–π –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
    const headerTitle = chatHeader.querySelector("h2");
    if (headerTitle && currentChat !== null) {
      const chatTheme = chats[currentChat].theme;
      headerTitle.textContent = getThemeTitle(chatTheme);
      if (backButton)
        headerTitle.insertBefore(backButton, headerTitle.firstChild);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–º—É –≤–∏–¥—É
  function resetToDesktopView() {
    chatSidebar.classList.remove("hidden");
    chatContent.classList.remove("active");

    if (backButton) backButton.style.display = "none";
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω
  function updatePopupPositions() {
    if (isMobile) {
      // –î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –æ–∫–Ω–∞ –Ω–∞–¥ –Ω–∏–∂–Ω–µ–π —Å—Ç—Ä–æ–∫–æ–π —á–∞—Ç–∞
      const inputHeight = container.querySelector(".chat-input").offsetHeight;

      if (emojiPicker) {
        emojiPicker.style.position = "absolute";
        emojiPicker.style.bottom = `${inputHeight}px`;
        emojiPicker.style.left = "0";
        emojiPicker.style.right = "0";
        emojiPicker.style.width = "100%";
        emojiPicker.style.zIndex = "1000";
        emojiPicker.style.borderTop = "1px solid #ddd";
        emojiPicker.style.borderBottom = "1px solid #ddd";
      }

      if (fileUploadPopup) {
        fileUploadPopup.style.position = "absolute";
        fileUploadPopup.style.bottom = `${inputHeight}px`;
        fileUploadPopup.style.left = "0";
        fileUploadPopup.style.right = "0";
        fileUploadPopup.style.width = "100%";
        fileUploadPopup.style.zIndex = "1000";
        fileUploadPopup.style.borderTop = "1px solid #ddd";
        fileUploadPopup.style.borderBottom = "1px solid #ddd";
      }
    } else {
      // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
      if (emojiPicker) {
        emojiPicker.style.position = "absolute";
        emojiPicker.style.bottom = "60px";
        emojiPicker.style.left = "20px";
        emojiPicker.style.right = "auto";
        emojiPicker.style.width = "auto";
        emojiPicker.style.borderTop = "";
        emojiPicker.style.borderBottom = "";
      }

      if (fileUploadPopup) {
        fileUploadPopup.style.position = "absolute";
        fileUploadPopup.style.bottom = "60px";
        fileUploadPopup.style.left = "300px";
        fileUploadPopup.style.right = "auto";
        fileUploadPopup.style.width = "auto";
        fileUploadPopup.style.borderTop = "";
        fileUploadPopup.style.borderBottom = "";
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –≤ –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
  function performMobileSearch(query) {
    if (!searchResults) return;

    searchResults.innerHTML = "";
    const lowerQuery = query.toLowerCase();

    if (currentChat === null) return;

    const messages = chats[currentChat].messages;
    let matchCount = 0;
    const matchResults = [];

    messages.forEach((msg, index) => {
      if (msg.text && msg.text.toLowerCase().includes(lowerQuery)) {
        matchCount++;
        matchResults.push({
          text: msg.text,
          index: index,
        });
      }
    });

    if (matchCount > 0) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const showResults = matchResults.slice(0, 5);

      showResults.forEach((result) => {
        const item = document.createElement("div");
        item.classList.add("header-search-result-item");

        // –í—ã–¥–µ–ª—è–µ–º —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
        const regex = new RegExp(`(${escapeRegExp(query)})`, "gi");
        const highlightedText = result.text.replace(
          regex,
          '<span class="header-highlight">$1</span>'
        );

        item.innerHTML = highlightedText;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        item.addEventListener("click", () => {
          navigateToMessage(result.index, query);
          if (searchResults) searchResults.classList.remove("active");
          if (headerSearchContainer)
            headerSearchContainer.classList.remove("active");
        });

        searchResults.appendChild(item);
      });
    } else {
      const noResults = document.createElement("div");
      noResults.classList.add("header-search-result-item");
      noResults.textContent = "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";
      searchResults.appendChild(noResults);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
  function navigateToMessage(messageIndex, query) {
    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º
    renderMessages(query);

    // –°–∫—Ä–æ–ª–ª–∏–º –∫ –Ω—É–∂–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
    setTimeout(() => {
      const messageDivs = chatMessages.querySelectorAll(".message-content");
      if (messageDivs[messageIndex]) {
        messageDivs[messageIndex].scrollIntoView({
          behavior: "smooth",
          block: "center",
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—ã–¥–µ–ª–µ–Ω–∏—è
        messageDivs[messageIndex].classList.add("highlight");
        setTimeout(() => {
          messageDivs[messageIndex].classList.remove("highlight");
        }, 2000);
      }
    }, 100);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ JSON-—Ñ–∞–π–ª–æ–≤
  async function loadData() {
    try {
      // –ó–∞–≥—Ä—É–∑–∫–∞ intents
      const intentsResponse = await fetch("/data/responses.json");
      if (!intentsResponse.ok)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤.");
      const intentsData = await intentsResponse.json();
      intents = intentsData.intents;

      // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤
      const dialoguesResponse = await fetch("/data/chat.json");
      if (!dialoguesResponse.ok)
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏.");
      const dialoguesData = await dialoguesResponse.json();
      dialogues = dialoguesData.dialogues;

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–æ–≤ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏
      initializeChats();
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏
  function initializeChats() {
    dialogues.forEach((dialogue) => {
      createNewChat(dialogue.theme, dialogue.messages, dialogue.date);
    });

    // –í –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
    if (isMobile) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫
      currentChat = null;
      showMobileChatList();
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function createheaderSearchBar() {
    const chatheader = container.querySelector(".chat-header");

    const searchContainer = document.createElement("div");
    searchContainer.id = "headerSearchContainer";

    const searchInput = document.createElement("input");
    searchInput.type = "text";
    searchInput.id = "headerSearchInput";
    searchInput.placeholder = "–ü–æ–∏—Å–∫ –ø–æ —á–∞—Ç–∞–º...";

    const searchIcon = document.createElement("span");
    searchIcon.id = "headerSearchIcon";
    searchIcon.classList.add("ri-menu-search-line");

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ø—É—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    searchContainer.appendChild(searchInput);
    searchContainer.appendChild(searchIcon);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    const searchResults = document.createElement("div");
    searchResults.id = "headerSearchResults";

    searchContainer.appendChild(searchResults);

    // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
    chatheader.appendChild(searchContainer);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–ø—É—Ç
    searchInput.addEventListener("input", handleSearchInput);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∏–∫–æ–Ω–∫—É –ø–æ–∏—Å–∫–∞
    searchIcon.addEventListener("click", () => {
      const query = searchInput.value.trim();
      if (query !== "") {
        performSearch(query);
      }
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    headerSearchContainerOriginal = searchContainer;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–ø—É—Ç (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function handleSearchInput(e) {
    const query = e.target.value.trim();
    currentSearchQuery = query;

    if (query === "") {
      toggleheaderSearchResults(false);
      updateHighlightedMessages();
      updateMatchCounts([]);
      return;
    }

    performSearch(query);
    updateHighlightedMessages();
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function performSearch(query) {
    const lowerQuery = query.toLowerCase();
    const results = [];

    // –°–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    Object.keys(chats).forEach((chatId) => {
      const chat = chats[chatId];
      let matchCount = 0;
      chat.messages.forEach((msg) => {
        if (msg.text && msg.text.toLowerCase().includes(lowerQuery)) {
          matchCount++;
        }
      });
      chat.matchCount = matchCount;
      if (matchCount > 0) {
        results.push({ chatId, matchCount });
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä—è–¥–æ–º —Å —á–∞—Ç–∞–º–∏
    updateMatchCounts(results);

    // –ò—â–µ–º —Ç–æ–ø-5 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
    const topResults = [];

    Object.keys(chats).forEach((chatId) => {
      const chat = chats[chatId];
      chat.messages.forEach((msg, index) => {
        if (msg.text && msg.text.toLowerCase().includes(lowerQuery)) {
          topResults.push({
            chatId,
            theme: chat.theme,
            message: msg.text,
            messageIndex: index,
            fullMessage: msg.text,
          });
        }
      });
    });

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const limitedResults = topResults.slice(0, 5);

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    displaySearchResults(limitedResults, query);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä—è–¥–æ–º —Å —á–∞—Ç–æ–º (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function updateMatchCounts(results) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—á–µ—Ç—á–∏–∫–∏
    const existingCounts = container.querySelectorAll(".match-count");
    existingCounts.forEach((count) => count.remove());

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
    results.forEach((result) => {
      const chatListItem = container.querySelector(
        `.chat-list-item[data-chat="${result.chatId}"]`
      );
      if (chatListItem) {
        const chatInfo = chatListItem.querySelector(".chat-info");
        const chatTitle = chatInfo.querySelector("h4");
        const existingMatch = chatTitle.querySelector(".match-count");
        if (existingMatch) {
          existingMatch.textContent = `(${result.matchCount})`;
        } else {
          const matchSpan = document.createElement("span");
          matchSpan.classList.add("match-count");
          matchSpan.textContent = `(${result.matchCount})`;
          chatTitle.appendChild(matchSpan);
        }
      }
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function displaySearchResults(results, query) {
    const searchResults = container.querySelector("#headerSearchResults");
    if (!searchResults) return;

    searchResults.innerHTML = "";

    if (results.length === 0) {
      toggleheaderSearchResults(false);
      renderMessages();
      return;
    }

    results.forEach((result) => {
      const item = document.createElement("div");
      item.classList.add("header-search-result-item");
      // –í—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
      const regex = new RegExp(`(${escapeRegExp(query)})`, "gi");
      const highlightedText = result.message.replace(
        regex,
        '<span class="header-highlight">$1</span>'
      );
      item.innerHTML = `<strong>${getThemeTitle(
        getThemeKey(result.theme)
      )}</strong>: ${highlightedText}`;
      item.addEventListener("click", () => {
        navigateToMatch(result.chatId, result.messageIndex, query);
        toggleheaderSearchResults(false);
      });
      searchResults.appendChild(item);
    });

    toggleheaderSearchResults(true);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function toggleheaderSearchResults(show = true) {
    const searchResults = container.querySelector("#headerSearchResults");
    if (!searchResults) return;

    if (show) {
      searchResults.style.display = "block";
    } else {
      searchResults.style.display = "none";
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é (–¥–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  function navigateToMatch(chatId, messageIndex, query) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω—É–∂–Ω—ã–π —á–∞—Ç
    switchChat(chatId);

    // –ï—Å–ª–∏ –º—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω —á–∞—Ç–∞
    if (isMobile) {
      showMobileChat();
    }

    // –ñ–¥—ë–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    setTimeout(() => {
      const messageDivs = chatMessages.querySelectorAll(".message-content");
      if (messageDivs[messageIndex]) {
        const messageText = messageDivs[messageIndex].innerText.toLowerCase();
        const queryLower = query.toLowerCase();
        const position = messageText.indexOf(queryLower);
        if (position !== -1) {
          messageDivs[messageIndex].scrollIntoView({
            behavior: "smooth",
            block: "center",
          });
          // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
          messageDivs[messageIndex].classList.add("highlight");
          setTimeout(() => {
            messageDivs[messageIndex].classList.remove("highlight");
          }, 2000);
        }
      }
    }, 100);
  }

  function updateHighlightedMessages() {
    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é –æ–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π
    chatMessages.innerHTML = "";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —á–∞—Ç
    if (currentChat === null) return;

    const messages = chats[currentChat].messages;
    lastAppendedDate = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É

    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    messages.forEach((messageObj) => {
      if (messageObj.imageUrl) {
        appendImageMessage(messageObj);
      } else if (messageObj.fileName) {
        appendFileMessage(messageObj);
      } else {
        appendMessage(messageObj, false); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      }
    });

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞
  function initializeChat() {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–º —á–∞—Ç–∞
    chatTopics.forEach((topic) => {
      topic.addEventListener("click", () => {
        const theme = topic.getAttribute("data-theme");
        createNewChat(theme);
      });
    });

    // –°–æ–∑–¥–∞–µ–º –ø–æ–∏—Å–∫ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    createheaderSearchBar();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
    const sendButton = container.querySelector(".send-button");

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –Ω–∞–∂–∞—Ç–∏—é Enter –∏–ª–∏ –∫–Ω–æ–ø–∫–∏
    chatInput.addEventListener("keypress", function (e) {
      if (e.key === "Enter") {
        sendMessage();
      }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    sendButton.addEventListener("click", function () {
      sendMessage();
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫ —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    if (attachmentIcon) {
      attachmentIcon.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleFileUploadPopup(true);
      });
    }

    if (smileyIcon) {
      smileyIcon.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleEmojiPicker(true);
      });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
    container.ownerDocument.addEventListener("click", (e) => {
      if (
        emojiPicker &&
        !emojiPicker.contains(e.target) &&
        e.target !== smileyIcon &&
        !smileyIcon.contains(e.target)
      ) {
        toggleEmojiPicker(false);
      }
      if (
        fileUploadPopup &&
        !fileUploadPopup.contains(e.target) &&
        e.target !== attachmentIcon &&
        !attachmentIcon.contains(e.target)
      ) {
        toggleFileUploadPopup(false);
      }

      // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∏—Å–∫–∞ –≤ –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏
      const headerSearchContainer = container.querySelector(
        "#headerSearchContainer"
      );
      const headerSearchIcon = container.querySelector("#headerSearchIcon");
      const headerSearchInput = container.querySelector("#headerSearchInput");
      if (
        headerSearchContainer &&
        !headerSearchContainer.contains(e.target) &&
        e.target !== headerSearchIcon &&
        e.target !== headerSearchInput
      ) {
        toggleheaderSearchResults(false);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ input
    if (fileInput) {
      fileInput.addEventListener("change", (e) => {
        const files = e.target.files;
        handleFiles(files);
        fileInput.value = "";
        toggleFileUploadPopup(false);
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener("resize", handleResize);

    // –ï—Å–ª–∏ —ç—Ç–æ –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è, —Å–æ–∑–¥–∞–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    if (isMobile) {
      createMobileElements();
      // –ù–∞—á–∏–Ω–∞–µ–º —Å —ç–∫—Ä–∞–Ω–∞ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º
      showMobileChatList();
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    if (quickQuestionsContainer && isMobile) {
      // –î–ª—è —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      let isScrolling = false;
      let startX, scrollLeft;

      quickQuestionsContainer.addEventListener(
        "touchstart",
        function (e) {
          isScrolling = true;
          startX = e.touches[0].pageX - quickQuestionsContainer.offsetLeft;
          scrollLeft = quickQuestionsContainer.scrollLeft;
        },
        { passive: false }
      );

      quickQuestionsContainer.addEventListener(
        "touchmove",
        function (e) {
          if (!isScrolling) return;
          const x = e.touches[0].pageX - quickQuestionsContainer.offsetLeft;
          const walk = (x - startX) * 2;
          quickQuestionsContainer.scrollLeft = scrollLeft - walk;
        },
        { passive: false }
      );

      quickQuestionsContainer.addEventListener("touchend", function () {
        isScrolling = false;
      });
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö
  function escapeRegExp(string) {
    return string.replace(/[.*+\-?^${}()|[\]\\]/g, "\\$&");
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
  function createNewChat(theme, initialMessages = [], date = null) {
    const themeKey = getThemeKey(theme);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —á–∞—Ç —Å –¥–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π
    const existingChatId = Object.keys(chats).find(
      (chatId) => chats[chatId].theme === themeKey
    );

    if (existingChatId) {
      // –ß–∞—Ç —Å –¥–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ
      switchChat(existingChatId);
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞—Ç–æ–π
      addMessagesToChat(existingChatId, initialMessages, date);
    } else {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
      const newChatId = nextChatId++;

      addChat(
        newChatId,
        themeKey,
        initialMessages.length > 0
          ? initialMessages
          : initialMessagesPerTheme[themeKey] ||
              initialMessagesPerTheme["general"],
        true,
        date
      );

      switchChat(newChatId);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞ –Ω–æ–≤—ã–º
  function replaceChat(oldChatId, newChatId, themeKey) {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —á–∞—Ç –∏–∑ –æ–±—ä–µ–∫—Ç–∞ chats
    delete chats[oldChatId];

    // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ
    const oldChatListItem = container.querySelector(
      `.chat-list-item[data-chat="${oldChatId}"]`
    );
    if (oldChatListItem) {
      chatList.removeChild(oldChatListItem);
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç —Å –Ω–æ–≤—ã–º ID
    addChat(
      newChatId,
      themeKey,
      initialMessagesPerTheme[themeKey] || initialMessagesPerTheme["general"],
      false
    );
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç chats –∏ –≤ –ª–µ–≤–æ–µ –º–µ–Ω—é
  function addChat(chatId, themeKey, messages, prepend = false, date = null) {
    chats[chatId] = {
      theme: themeKey,
      messages: [],
    };

    const formattedDate = date
      ? /^\d{4}-\d{2}-\d{2}$/.test(date)
        ? formatToReadableDate(date)
        : date
      : getCurrentDate();

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    messages.forEach((msg) => {
      const messageObj = {
        text: msg.text,
        sender:
          msg.sender === "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" || msg.sender === "–Ø" ? "user" : "bot",
        time: msg.time || getCurrentTime(),
        date: formattedDate,
      };
      chats[chatId].messages.push(messageObj);
    });

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
    const chatListItem = document.createElement("li");
    chatListItem.classList.add("chat-list-item");
    chatListItem.setAttribute("data-chat", chatId);

    // –í—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
    const chatIcon = chatIcons[themeKey] || chatIcons["general"];

    const chatIconSpan = document.createElement("span");
    chatIconSpan.classList.add("chat-icon");
    chatIconSpan.textContent = chatIcon;

    const chatInfoDiv = document.createElement("div");
    chatInfoDiv.classList.add("chat-info");

    const chatTitle = document.createElement("h4");
    chatTitle.textContent = getThemeTitle(themeKey);

    const chatStatus = document.createElement("p");
    chatStatus.textContent = "–ù–∞ —Å–≤—è–∑–∏";

    chatInfoDiv.appendChild(chatTitle);
    chatInfoDiv.appendChild(chatStatus);

    chatListItem.appendChild(chatIconSpan);
    chatListItem.appendChild(chatInfoDiv);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —á–∞—Ç
    chatListItem.addEventListener("click", () => {
      switchChat(chatId);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
    if (prepend) {
      chatList.prepend(chatListItem);
    } else {
      chatList.appendChild(chatListItem);
    }

    // –ï—Å–ª–∏ —á–∞—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω, –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    if (currentChat === chatId) {
      renderMessages();
      initializeQuickQuestions();
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç
  function addMessagesToChat(chatId, newMessages, date) {
    const formattedDate = date
      ? /^\d{4}-\d{2}-\d{2}$/.test(date)
        ? formatToReadableDate(date)
        : date
      : getCurrentDate();

    newMessages.forEach((msg) => {
      const messageObj = {
        text: msg.text,
        sender:
          msg.sender === "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" || msg.sender === "–Ø" ? "user" : "bot",
        time: msg.time || getCurrentTime(),
        date: formattedDate,
      };
      chats[chatId].messages.push(messageObj);
    });

    if (currentChat === chatId) {
      renderMessages();
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
  function switchChat(chatId) {
    if (currentChat === chatId) return;

    // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —á–∞—Ç–∞
    if (currentChat !== null) {
      const previousActiveItem = container.querySelector(
        `.chat-list-item[data-chat="${currentChat}"]`
      );
      if (previousActiveItem) {
        previousActiveItem.classList.remove("active");
      }
    }

    currentChat = chatId;
    currentTopic = chats[chatId].theme;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –∫ –Ω–æ–≤–æ–º—É —á–∞—Ç—É
    const newActiveItem = container.querySelector(
      `.chat-list-item[data-chat="${chatId}"]`
    );
    if (newActiveItem) {
      newActiveItem.classList.add("active");
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
    renderMessages();

    // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —á–∞—Ç–∞
    chatMessages.scrollTop = chatMessages.scrollHeight;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π —Ç–µ–º—ã
    initializeQuickQuestions();

    // –í –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–∞—Ç–∞
    if (isMobile) {
      showMobileChat();
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞ —Ç–µ–º—ã
  function getThemeKey(theme) {
    switch (theme) {
      case "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–∫–∞–∑–æ–≤":
      case "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑–∞–º":
        return "orders";
      case "–ü—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã":
        return "returns";
      case "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞":
        return "support";
      default:
        return "general";
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–µ–º—ã –ø–æ –∫–ª—é—á—É
  function getThemeTitle(themeKey) {
    switch (themeKey) {
      case "orders":
        return "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–∫–∞–∑–æ–≤";
      case "returns":
        return "–ü—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã";
      case "support":
        return "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞";
      default:
        return "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã";
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  function addQuickQuestion(question) {
    chatInput.value = question;
    chatInput.focus();
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  async function sendMessage() {
    if (currentChat === null) return;

    const message = chatInput.value.trim();
    if (message === "") return;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
    const userMessage = {
      text: message,
      sender: "user",
      time: getCurrentTime(),
      date: getCurrentDate(),
    };
    chats[currentChat].messages.push(userMessage);
    appendMessage(userMessage);

    chatInput.value = "";

    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞
    const botResponse = await getBotResponse(message);
    const botMessage = {
      text: botResponse,
      sender: "bot",
      time: getCurrentTime(),
      date: getCurrentDate(),
    };
    chats[currentChat].messages.push(botMessage);
    appendMessage(botMessage);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
  function getCurrentTime() {
    const now = new Date();
    return (
      now.getHours().toString().padStart(2, "0") +
      ":" +
      now.getMinutes().toString().padStart(2, "0")
    );
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 17 –¥–µ–∫–∞–±—Ä—è 2024
  function getCurrentDate() {
    const now = new Date();
    const options = { day: "numeric", month: "long", year: "numeric" };
    return now.toLocaleDateString("ru-RU", options).replace(" –≥.", "");
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
  async function getBotResponse(userMessage) {
    try {
      // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Flask (–µ—Å–ª–∏ –µ—Å—Ç—å)
      const response = await fetch("http://127.0.0.1:5000/send_message", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ message: userMessage }),
      });

      if (!response.ok) {
        throw new Error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
      }

      const data = await response.json();
      return data.response;
    } catch (error) {
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–Ω—Ç—ã
      return getLocalResponse(userMessage);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ–Ω—Ç–∞—Ö
  function getLocalResponse(userMessage) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    if (!intents || intents.length === 0) {
      return "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
    }

    const lowerCaseMessage = userMessage.toLowerCase();
    let matchedResponses = [];

    for (const intent of intents) {
      for (const pattern of intent.patterns) {
        if (lowerCaseMessage.includes(pattern.toLowerCase())) {
          matchedResponses = matchedResponses.concat(intent.responses);
          break;
        }
      }
    }

    if (matchedResponses.length > 0) {
      // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ —Å–æ–≤–ø–∞–≤—à–∏—Ö –∏–Ω—Ç–µ–Ω—Ç–æ–≤
      const randomIndex = Math.floor(Math.random() * matchedResponses.length);
      return matchedResponses[randomIndex];
    }

    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å.";
  }

  let lastAppendedDate = null; // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
  function appendMessage(messageObj, scrollToBottom = true) {
    const currentDate = messageObj.date || getCurrentDate();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (lastAppendedDate !== currentDate) {
      appendDateDivider(currentDate);
      lastAppendedDate = currentDate;
    }

    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message", messageObj.sender);

    const avatarDiv = document.createElement("div");
    avatarDiv.classList.add("avatar");

    const messageContentWrapper = document.createElement("div");
    messageContentWrapper.classList.add("message-wrapper");

    const messageContent = document.createElement("div");
    messageContent.classList.add("message-content");

    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –µ–≥–æ, –≤—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    if (
      currentSearchQuery &&
      messageObj.text.toLowerCase().includes(currentSearchQuery.toLowerCase())
    ) {
      const regex = new RegExp(`(${escapeRegExp(currentSearchQuery)})`, "gi");
      const highlightedText = messageObj.text.replace(
        regex,
        '<span class="header-highlight">$1</span>'
      );
      messageContent.innerHTML = highlightedText;
    } else {
      messageContent.textContent = messageObj.text;
    }

    const messageTime = document.createElement("div");
    messageTime.classList.add("message-time");
    messageTime.textContent = messageObj.time;

    messageContentWrapper.appendChild(messageContent);
    messageContentWrapper.appendChild(messageTime);

    if (messageObj.sender === "user") {
      messageDiv.appendChild(messageContentWrapper);
      messageDiv.appendChild(avatarDiv);
    } else {
      messageDiv.appendChild(avatarDiv);
      messageDiv.appendChild(messageContentWrapper);
    }

    chatMessages.appendChild(messageDiv);

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ
    if (scrollToBottom) {
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: "17 –¥–µ–∫–∞–±—Ä—è 2024"
  function formatToReadableDate(dateString) {
    const months = [
      "—è–Ω–≤–∞—Ä—è",
      "—Ñ–µ–≤—Ä–∞–ª—è",
      "–º–∞—Ä—Ç–∞",
      "–∞–ø—Ä–µ–ª—è",
      "–º–∞—è",
      "–∏—é–Ω—è",
      "–∏—é–ª—è",
      "–∞–≤–≥—É—Å—Ç–∞",
      "—Å–µ–Ω—Ç—è–±—Ä—è",
      "–æ–∫—Ç—è–±—Ä—è",
      "–Ω–æ—è–±—Ä—è",
      "–¥–µ–∫–∞–±—Ä—è",
    ];
    const [year, month, day] = dateString.split("-");
    return `${parseInt(day, 10)} ${months[parseInt(month, 10) - 1]} ${year}`;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
  function renderMessages(searchQuery = "") {
    chatMessages.innerHTML = "";
    currentSearchQuery = searchQuery;

    if (currentChat === null) return;

    const messages = chats[currentChat].messages;
    lastAppendedDate = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–µ

    messages.forEach((messageObj) => {
      if (messageObj.imageUrl) {
        appendImageMessage(messageObj);
      } else if (messageObj.fileName) {
        appendFileMessage(messageObj);
      } else {
        appendMessage(messageObj, false);
      }
    });

    // –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è —Å –¥–∞—Ç–æ–π
  function appendDateDivider(date) {
    const dateDivider = document.createElement("div");
    dateDivider.classList.add("date-divider");
    dateDivider.textContent = date;

    chatMessages.appendChild(dateDivider);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
  function initializeQuickQuestions() {
    const questions = quickQuestionsPerTopic[currentTopic] || [];

    quickQuestionsContainer.innerHTML = "";

    questions.forEach((question) => {
      const quickQuestionDiv = document.createElement("div");
      quickQuestionDiv.classList.add("quick-question");
      quickQuestionDiv.textContent = question;
      quickQuestionDiv.addEventListener("click", () => {
        addQuickQuestion(question);
      });
      quickQuestionsContainer.appendChild(quickQuestionDiv);
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ emojiPicker
  function populateEmojiPicker() {
    let emojiGrid = container.querySelector(".emoji-grid");
    if (!emojiGrid) {
      emojiGrid = document.createElement("div");
      emojiGrid.classList.add("emoji-grid");
      emojiPicker.appendChild(emojiGrid);
    } else {
      emojiGrid.innerHTML = "";
    }

    const emojisList = [
      "üòÄ",
      "üòÇ",
      "üòç",
      "üëç",
      "üôè",
      "üéâ",
      "üò¢",
      "ü§î",
      "üòé",
      "üò°",
      "üò≠",
      "üòä",
      "üò¥",
      "üí™",
      "üòá",
      "üòú",
      "ü§ó",
      "üòè",
      "üôÑ",
      "üòã",
      "üòå",
    ];

    emojisList.forEach((emoji) => {
      const emojiSpan = document.createElement("span");
      emojiSpan.classList.add("emoji");
      emojiSpan.textContent = emoji;
      emojiGrid.appendChild(emojiSpan);
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è emojiPicker
  function initializeEmojiPicker() {
    populateEmojiPicker();
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ —ç–º–æ–¥–∑–∏
    emojiPicker.addEventListener("click", (e) => {
      if (e.target.classList.contains("emoji")) {
        insertEmoji(e.target.textContent);
        toggleEmojiPicker(false);
      }
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  function toggleFileUploadPopup(show = true) {
    updatePopupPositions();
    if (show) {
      fileUploadPopup.classList.add("active");
    } else {
      fileUploadPopup.classList.remove("active");
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞—à–∫–∏ —Å —ç–º–æ–¥–∑–∏
  function toggleEmojiPicker(show = true) {
    updatePopupPositions();
    if (show) {
      emojiPicker.classList.add("active");
    } else {
      emojiPicker.classList.remove("active");
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ —Å–º–∞–π–ª–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  function insertEmoji(emoji) {
    const cursorPosition = chatInput.selectionStart;
    const textBefore = chatInput.value.substring(0, cursorPosition);
    const textAfter = chatInput.value.substring(cursorPosition);
    chatInput.value = textBefore + emoji + textAfter;
    chatInput.focus();
    chatInput.selectionStart = cursorPosition + emoji.length;
    chatInput.selectionEnd = cursorPosition + emoji.length;
  }

  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  function handleFiles(files) {
    for (const file of files) {
      if (file.type.startsWith("image/")) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const reader = new FileReader();
        reader.onload = function (e) {
          const imageMessage = {
            text: "",
            sender: "user",
            time: getCurrentTime(),
            date: getCurrentDate(),
            imageUrl: e.target.result,
          };
          chats[currentChat].messages.push(imageMessage);
          appendImageMessage(imageMessage);
        };
        reader.readAsDataURL(file);
      } else {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
        const fileMessage = {
          text: "",
          sender: "user",
          time: getCurrentTime(),
          date: getCurrentDate(),
          fileName: file.name,
          fileSize: formatFileSize(file.size),
        };
        chats[currentChat].messages.push(fileMessage);
        appendFileMessage(fileMessage);
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
  function formatFileSize(bytes) {
    const sizes = ["–ë", "–ö–ë", "–ú–ë", "–ì–ë", "–¢–ë"];
    if (bytes === 0) return "0 –ë";
    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10);
    return (bytes / Math.pow(1024, i)).toFixed(2) + " " + sizes[i];
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —á–∞—Ç–µ
  function appendImageMessage(messageObj) {
    const currentDate = messageObj.date || getCurrentDate();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (lastAppendedDate !== currentDate) {
      appendDateDivider(currentDate);
      lastAppendedDate = currentDate;
    }

    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message", messageObj.sender);

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤—Ä–µ–º–µ–Ω–∏
    const messageContentWrapper = document.createElement("div");
    messageContentWrapper.classList.add("message-wrapper");

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const messageContent = document.createElement("div");
    messageContent.classList.add("message-content");

    const img = document.createElement("img");
    img.src = messageObj.imageUrl;
    img.alt = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ";
    img.style.maxWidth = "100%";
    img.style.borderRadius = "10px";

    messageContent.appendChild(img);

    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
    const messageTime = document.createElement("div");
    messageTime.classList.add("message-time");
    messageTime.textContent = messageObj.time;

    messageContentWrapper.appendChild(messageContent);
    messageContentWrapper.appendChild(messageTime);

    // –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    const avatarDiv = document.createElement("div");
    avatarDiv.classList.add("avatar");

    // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
    if (messageObj.sender === "user") {
      messageDiv.appendChild(messageContentWrapper);
      messageDiv.appendChild(avatarDiv);
    } else {
      messageDiv.appendChild(avatarDiv);
      messageDiv.appendChild(messageContentWrapper);
    }

    chatMessages.appendChild(messageDiv);

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ —á–∞—Ç–µ
  function appendFileMessage(messageObj) {
    const currentDate = messageObj.date || getCurrentDate();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (lastAppendedDate !== currentDate) {
      appendDateDivider(currentDate);
      lastAppendedDate = currentDate;
    }

    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message", messageObj.sender);

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏
    const messageContentWrapper = document.createElement("div");
    messageContentWrapper.classList.add("message-wrapper");

    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞
    const messageContent = document.createElement("div");
    messageContent.classList.add("message-content");

    const fileIcon = document.createElement("span");
    fileIcon.textContent = "üìÑ";
    fileIcon.style.marginRight = "10px";

    const fileInfo = document.createElement("span");
    fileInfo.textContent = `${messageObj.fileName} (${messageObj.fileSize})`;

    messageContent.appendChild(fileIcon);
    messageContent.appendChild(fileInfo);

    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
    const messageTime = document.createElement("div");
    messageTime.classList.add("message-time");
    messageTime.textContent = messageObj.time;

    messageContentWrapper.appendChild(messageContent);
    messageContentWrapper.appendChild(messageTime);

    // –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    const avatarDiv = document.createElement("div");
    avatarDiv.classList.add("avatar");

    // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
    if (messageObj.sender === "user") {
      messageDiv.appendChild(messageContentWrapper);
      messageDiv.appendChild(avatarDiv);
    } else {
      messageDiv.appendChild(avatarDiv);
      messageDiv.appendChild(messageContentWrapper);
    }

    chatMessages.appendChild(messageDiv);

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  loadData().then(() => {
    initializeChat();
    initializeEmojiPicker();

    // –ù–∞—á–∏–Ω–∞–µ–º —Å —ç–∫—Ä–∞–Ω–∞ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–æ–≤ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º
    if (isMobile) {
      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
      currentChat = null;
      showMobileChatList();
    }
  });
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
window.initChat = initChat;
