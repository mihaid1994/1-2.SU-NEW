// chat.js

// –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ DOM
const chatMessages = document.getElementById("chatMessages");
const chatInput = document.getElementById("chatInput");
const chatTopics = document.querySelectorAll(".chat-topic");
const chatList = document.getElementById("chatList");
const quickQuestionsContainer = document.getElementById("quickQuestions");

// –ù–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ —Å–º–∞–π–ª–æ–≤
const attachmentIcon = document.getElementById("attachmentIcon");
const smileyIcon = document.getElementById("smileyIcon");
const fileUploadPopup = document.getElementById("fileUploadPopup");
const closePopup = document.getElementById("closePopup");
const fileInput = document.getElementById("fileInput");
const emojiPicker = document.getElementById("emojiPicker");

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤
let currentChat = null; // –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
let currentTopic = null; // –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–º—É —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
const chats = {}; // –û–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–æ–≤ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º id
let currentSearchQuery = ""; // –¢–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å

// –û–±—ä–µ–∫—Ç —Å –±—ã—Å—Ç—Ä—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
const quickQuestionsPerTopic = {
  orders: [
    "–ö–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞?",
    "–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏?",
    "–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑?",
    "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –º–æ–π –∑–∞–∫–∞–∑?",
    "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä–Ω—ã–π —á–µ–∫?",
    "–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞?",
    "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è?",
  ],
  returns: [
    "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞?",
    "–ö–∞–∫–æ–≤–∞ –ø–æ–ª–∏—Ç–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤?",
    "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –≤–æ–∑–≤—Ä–∞—Ç–∞?",
    "–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞?",
    "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç?",
    "–ú–æ–∂–Ω–æ –ª–∏ –æ–±–º–µ–Ω—è—Ç—å —Ç–æ–≤–∞—Ä?",
    "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞?",
  ],
  support: [
    "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
    "–ö–∞–∫ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å?",
    "–ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç, –ø–æ–º–æ–≥–∏—Ç–µ.",
    "–ü–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å?",
    "–ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?",
    "–ö–∞–∫ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ?",
    "–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–ª–∏–µ–Ω—Ç–æ–≤?",
  ],
};

// –û–±—ä–µ–∫—Ç —Å –∏–∫–æ–Ω–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
const chatIcons = {
  orders: "üì¶",
  returns: "üîÑ",
  support: "‚öôÔ∏è",
  general: "üí¨",
};

// –û–±—ä–µ–∫—Ç —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
const initialMessagesPerTheme = {
  orders: [
    {
      sender: "bot",
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º?",
    },
  ],
  returns: [
    {
      sender: "bot",
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º —Ç–æ–≤–∞—Ä–∞?",
    },
  ],
  support: [
    {
      sender: "bot",
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö?",
    },
  ],
  general: [
    {
      sender: "bot",
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?",
    },
  ],
};

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –∏ –¥–∏–∞–ª–æ–≥–æ–≤
let intents = []; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ JSON-—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
let dialogues = []; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤
let nextChatId = 1; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ id —á–∞—Ç–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ JSON-—Ñ–∞–π–ª–æ–≤
async function loadData() {
  try {
    // –ó–∞–≥—Ä—É–∑–∫–∞ intents
    const intentsResponse = await fetch("/data/responses.json"); // –ó–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (!intentsResponse.ok)
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤.");
    const intentsData = await intentsResponse.json();
    intents = intentsData.intents;

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤
    const dialoguesResponse = await fetch("/data/chat.json"); // –ó–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if (!dialoguesResponse.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∏–∞–ª–æ–≥–∏.");
    const dialoguesData = await dialoguesResponse.json();
    dialogues = dialoguesData.dialogues;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–æ–≤ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏
    initializeChats();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏
function initializeChats() {
  dialogues.forEach((dialogue) => {
    createNewChat(dialogue.theme, dialogue.messages, dialogue.date);
  });
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞
function initializeChat() {
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–º —á–∞—Ç–∞
  chatTopics.forEach((topic) => {
    topic.addEventListener("click", () => {
      const theme = topic.getAttribute("data-theme");
      createNewChat(theme);
    });
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
  const sendButton = document.querySelector(".send-button");

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –Ω–∞–∂–∞—Ç–∏—é Enter –∏–ª–∏ –∫–Ω–æ–ø–∫–∏
  chatInput.addEventListener("keypress", function (e) {
    if (e.key === "Enter") {
      sendMessage();
    }
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
  sendButton.addEventListener("click", function () {
    sendMessage();
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫
  attachmentIcon.addEventListener("click", () => {
    toggleFileUploadPopup(true);
  });

  smileyIcon.addEventListener("click", () => {
    toggleEmojiPicker(true);
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
  document.addEventListener("click", (e) => {
    if (
      emojiPicker &&
      !emojiPicker.contains(e.target) &&
      e.target !== smileyIcon &&
      !smileyIcon.contains(e.target)
    ) {
      toggleEmojiPicker(false);
    }
    if (
      fileUploadPopup &&
      !fileUploadPopup.contains(e.target) &&
      e.target !== attachmentIcon &&
      !attachmentIcon.contains(e.target)
    ) {
      toggleFileUploadPopup(false);
    }
    const headerSearchContainer = document.getElementById(
      "headerSearchContainer"
    );
    const headerSearchIcon = document.getElementById("headerSearchIcon");
    const headerSearchInput = document.getElementById("headerSearchInput");
    if (
      headerSearchContainer &&
      !headerSearchContainer.contains(e.target) &&
      e.target !== headerSearchIcon &&
      e.target !== headerSearchInput
    ) {
      toggleHeaderSearchResults(false);
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ input
  fileInput.addEventListener("change", (e) => {
    const files = e.target.files;
    handleFiles(files);
    fileInput.value = ""; // –û—á–∏—Å—Ç–∏—Ç—å input –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
    toggleFileUploadPopup(false);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag and drop
  const dropArea = document.querySelector(".drop-area");
  if (dropArea) {
    dropArea.addEventListener("dragover", (e) => {
      e.preventDefault();
      dropArea.classList.add("dragover");
    });

    dropArea.addEventListener("dragleave", (e) => {
      e.preventDefault();
      dropArea.classList.remove("dragover");
    });

    dropArea.addEventListener("drop", (e) => {
      e.preventDefault();
      dropArea.classList.remove("dragover");
      const files = e.dataTransfer.files;
      handleFiles(files);
      toggleFileUploadPopup(false);
    });
  }

  // –°–æ–∑–¥–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–ø—É—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
  createHeaderSearchBar();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
function createNewChat(theme, initialMessages = [], date = null) {
  const themeKey = getThemeKey(theme);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —á–∞—Ç —Å –¥–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π
  const existingChatId = Object.keys(chats).find(
    (chatId) => chats[chatId].theme === themeKey
  );

  if (existingChatId) {
    // –ß–∞—Ç —Å –¥–∞–Ω–Ω–æ–π —Ç–µ–º–æ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ
    switchChat(existingChatId);
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞—Ç–æ–π
    addMessagesToChat(existingChatId, initialMessages, date);
  } else {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç
    const newChatId = nextChatId++;

    addChat(
      newChatId,
      themeKey,
      initialMessages.length > 0
        ? initialMessages
        : initialMessagesPerTheme[themeKey] ||
            initialMessagesPerTheme["general"],
      true,
      date
    );

    switchChat(newChatId);
  }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞ –Ω–æ–≤—ã–º (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ —á–∞—Ç–æ–≤ –ø–æ —Ç–µ–º–µ)
// –û—Å—Ç–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
function replaceChat(oldChatId, newChatId, themeKey) {
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —á–∞—Ç –∏–∑ –æ–±—ä–µ–∫—Ç–∞ chats
  delete chats[oldChatId];

  // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤ –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ
  const oldChatListItem = document.querySelector(
    `.chat-list-item[data-chat="${oldChatId}"]`
  );
  if (oldChatListItem) {
    chatList.removeChild(oldChatListItem);
  }

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —á–∞—Ç —Å –Ω–æ–≤—ã–º ID
  addChat(
    newChatId,
    themeKey,
    initialMessagesPerTheme[themeKey] || initialMessagesPerTheme["general"],
    false
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞ –≤ –æ–±—ä–µ–∫—Ç chats –∏ –≤ –ª–µ–≤–æ–µ –º–µ–Ω—é
function addChat(chatId, themeKey, messages, prepend = false, date = null) {
  chats[chatId] = {
    theme: themeKey,
    messages: [],
  };

  const formattedDate = date
    ? /^\d{4}-\d{2}-\d{2}$/.test(date)
      ? formatToReadableDate(date)
      : date
    : getCurrentDate();

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
  messages.forEach((msg) => {
    const messageObj = {
      text: msg.text,
      sender:
        msg.sender === "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" || msg.sender === "–Ø" ? "user" : "bot",
      time: msg.time || getCurrentTime(),
      date: formattedDate, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∞—Ç—É
    };
    chats[chatId].messages.push(messageObj);
  });

  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
  const chatListItem = document.createElement("li");
  chatListItem.classList.add("chat-list-item");
  chatListItem.setAttribute("data-chat", chatId);

  // –í—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
  const chatIcon = chatIcons[themeKey] || chatIcons["general"];

  const chatIconSpan = document.createElement("span");
  chatIconSpan.classList.add("chat-icon");
  chatIconSpan.textContent = chatIcon;

  const chatInfoDiv = document.createElement("div");
  chatInfoDiv.classList.add("chat-info");

  const chatTitle = document.createElement("h4");
  chatTitle.textContent = getThemeTitle(themeKey);

  const chatStatus = document.createElement("p");
  chatStatus.textContent = "–ù–∞ —Å–≤—è–∑–∏";

  chatInfoDiv.appendChild(chatTitle);
  chatInfoDiv.appendChild(chatStatus);

  chatListItem.appendChild(chatIconSpan);
  chatListItem.appendChild(chatInfoDiv);

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —á–∞—Ç
  chatListItem.addEventListener("click", () => {
    switchChat(chatId);
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ —Å–ø–∏—Å–æ–∫
  if (prepend) {
    chatList.prepend(chatListItem);
  } else {
    chatList.appendChild(chatListItem);
  }

  // –ï—Å–ª–∏ —á–∞—Ç —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω, –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
  if (currentChat === chatId) {
    renderMessages();
    initializeQuickQuestions();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç
function addMessagesToChat(chatId, newMessages, date) {
  const formattedDate = date
    ? /^\d{4}-\d{2}-\d{2}$/.test(date)
      ? formatToReadableDate(date)
      : date
    : getCurrentDate();

  newMessages.forEach((msg) => {
    const messageObj = {
      text: msg.text,
      sender:
        msg.sender === "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" || msg.sender === "–Ø" ? "user" : "bot",
      time: msg.time || getCurrentTime(),
      date: formattedDate, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∞—Ç—É
    };
    chats[chatId].messages.push(messageObj);
  });

  if (currentChat === chatId) {
    renderMessages();
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–∞—Ç–∞
function switchChat(chatId) {
  if (currentChat === chatId) return;

  // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å active —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —á–∞—Ç–∞
  if (currentChat !== null) {
    const previousActiveItem = document.querySelector(
      `.chat-list-item[data-chat="${currentChat}"]`
    );
    if (previousActiveItem) {
      previousActiveItem.classList.remove("active");
    }
  }

  currentChat = chatId;
  currentTopic = chats[chatId].theme;

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å active –∫ –Ω–æ–≤–æ–º—É —á–∞—Ç—É
  const newActiveItem = document.querySelector(
    `.chat-list-item[data-chat="${chatId}"]`
  );
  if (newActiveItem) {
    newActiveItem.classList.add("active");
  }

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
  renderMessages();

  // **–ò–∑–º–µ–Ω–µ–Ω–æ: –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —á–∞—Ç–∞**
  chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to the bottom of the chat

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –Ω–æ–≤–æ–π —Ç–µ–º—ã
  initializeQuickQuestions();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞ —Ç–µ–º—ã (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–∞–º –≤ quickQuestionsPerTopic)
function getThemeKey(theme) {
  switch (theme) {
    case "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–∫–∞–∑–æ–≤":
    case "–í–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–∫–∞–∑–∞–º":
      return "orders";
    case "–ü—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã":
      return "returns";
    case "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞":
      return "support";
    default:
      return "general";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–µ–º—ã –ø–æ –∫–ª—é—á—É
function getThemeTitle(themeKey) {
  switch (themeKey) {
    case "orders":
      return "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–∞–∫–∞–∑–æ–≤";
    case "returns":
      return "–ü—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç—ã";
    case "support":
      return "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞";
    default:
      return "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
function addQuickQuestion(question) {
  chatInput.value = question;
  chatInput.focus();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendMessage() {
  if (currentChat === null) return; // –ï—Å–ª–∏ —á–∞—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å

  const message = chatInput.value.trim();
  if (message === "") return;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—É—â–∏–π —á–∞—Ç
  const userMessage = {
    text: message,
    sender: "user",
    time: getCurrentTime(),
    date: getCurrentDate(), // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
  };
  chats[currentChat].messages.push(userMessage);
  appendMessage(userMessage); // **–ò–∑–º–µ–Ω–µ–Ω–æ: scrollToBottom –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = true**

  chatInput.value = "";

  // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞
  const botResponse = await getBotResponse(message);
  const botMessage = {
    text: botResponse,
    sender: "bot",
    time: getCurrentTime(),
    date: getCurrentDate(), // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
  };
  chats[currentChat].messages.push(botMessage);
  appendMessage(botMessage); // **–ò–∑–º–µ–Ω–µ–Ω–æ: scrollToBottom –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = true**
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM
function getCurrentTime() {
  const now = new Date();
  return (
    now.getHours().toString().padStart(2, "0") +
    ":" +
    now.getMinutes().toString().padStart(2, "0")
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 17 –¥–µ–∫–∞–±—Ä—è 2024
function getCurrentDate() {
  const now = new Date();
  const options = { day: "numeric", month: "long", year: "numeric" };
  return now.toLocaleDateString("ru-RU", options).replace(" –≥.", "");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞
async function getBotResponse(userMessage) {
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Flask (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const response = await fetch("http://127.0.0.1:5000/send_message", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ message: userMessage }),
    });

    if (!response.ok) {
      throw new Error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
    }

    const data = await response.json();
    return data.response;
  } catch (error) {
    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–Ω—Ç—ã
    return getLocalResponse(userMessage);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Ç–µ–Ω—Ç–∞—Ö
function getLocalResponse(userMessage) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω—Ç–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  if (!intents || intents.length === 0) {
    return "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
  }

  const lowerCaseMessage = userMessage.toLowerCase();
  let matchedResponses = [];

  for (const intent of intents) {
    for (const pattern of intent.patterns) {
      if (lowerCaseMessage.includes(pattern.toLowerCase())) {
        matchedResponses = matchedResponses.concat(intent.responses);
        break;
      }
    }
  }

  if (matchedResponses.length > 0) {
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ —Å–æ–≤–ø–∞–≤—à–∏—Ö –∏–Ω—Ç–µ–Ω—Ç–æ–≤
    const randomIndex = Math.floor(Math.random() * matchedResponses.length);
    return matchedResponses[randomIndex];
  }

  return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å.";
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function appendMessage(messageObj, scrollToBottom = true) {
  // **–ò–∑–º–µ–Ω–µ–Ω–æ: scrollToBottom –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = true**
  const currentDate = messageObj.date || getCurrentDate();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  if (lastAppendedDate !== currentDate) {
    appendDateDivider(currentDate);
    lastAppendedDate = currentDate;
  }

  const messageDiv = document.createElement("div");
  messageDiv.classList.add("message", messageObj.sender);

  const avatarDiv = document.createElement("div");
  avatarDiv.classList.add("avatar");

  const messageContentWrapper = document.createElement("div");
  messageContentWrapper.classList.add("message-wrapper");

  const messageContent = document.createElement("div");
  messageContent.classList.add("message-content");

  // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –µ–≥–æ, –≤—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  if (
    currentSearchQuery &&
    messageObj.text.toLowerCase().includes(currentSearchQuery.toLowerCase())
  ) {
    const regex = new RegExp(`(${escapeRegExp(currentSearchQuery)})`, "gi");
    const highlightedText = messageObj.text.replace(
      regex,
      '<span class="message-highlight">$1</span>'
    );
    messageContent.innerHTML = highlightedText;
  } else {
    messageContent.textContent = messageObj.text;
  }

  const messageTime = document.createElement("div");
  messageTime.classList.add("message-time");
  messageTime.textContent = messageObj.time;

  messageContentWrapper.appendChild(messageContent);
  messageContentWrapper.appendChild(messageTime);

  if (messageObj.sender === "user") {
    messageDiv.appendChild(avatarDiv);
    messageDiv.appendChild(messageContentWrapper);
  } else {
    messageDiv.appendChild(avatarDiv);
    messageDiv.appendChild(messageContentWrapper);
  }

  chatMessages.appendChild(messageDiv);

  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ
  if (scrollToBottom) {
    // **–ò–∑–º–µ–Ω–µ–Ω–æ: –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑**
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }
}

let lastAppendedDate = null; // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: "17 –¥–µ–∫–∞–±—Ä—è 2024"
function formatToReadableDate(dateString) {
  const months = [
    "—è–Ω–≤–∞—Ä—è",
    "—Ñ–µ–≤—Ä–∞–ª—è",
    "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è",
    "–º–∞—è",
    "–∏—é–Ω—è",
    "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞",
    "—Å–µ–Ω—Ç—è–±—Ä—è",
    "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è",
    "–¥–µ–∫–∞–±—Ä—è",
  ];
  const [year, month, day] = dateString.split("-");
  return `${parseInt(day, 10)} ${months[parseInt(month, 10) - 1]} ${year}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function renderMessages() {
  chatMessages.innerHTML = "";

  if (currentChat === null) return;

  const messages = chats[currentChat].messages;
  lastAppendedDate = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–µ

  messages.forEach((messageObj) => {
    if (messageObj.imageUrl) {
      appendImageMessage(messageObj);
    } else if (messageObj.fileName) {
      appendFileMessage(messageObj);
    } else {
      appendMessage(messageObj);
    }
  });

  // **–ò–∑–º–µ–Ω–µ–Ω–æ: –°–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π**
  chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to the bottom of the chat
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è —Å –¥–∞—Ç–æ–π
function appendDateDivider(date) {
  const dateDivider = document.createElement("div");
  dateDivider.classList.add("date-divider");
  dateDivider.textContent = date;

  chatMessages.appendChild(dateDivider);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—ã—Å—Ç—Ä—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
function initializeQuickQuestions() {
  const questions = quickQuestionsPerTopic[currentTopic] || [];

  quickQuestionsContainer.innerHTML = "";

  questions.forEach((question) => {
    const quickQuestionDiv = document.createElement("div");
    quickQuestionDiv.classList.add("quick-question");
    quickQuestionDiv.textContent = question;
    quickQuestionDiv.addEventListener("click", () => {
      addQuickQuestion(question);
    });
    quickQuestionsContainer.appendChild(quickQuestionDiv);
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –≤ emojiPicker
function populateEmojiPicker() {
  const emojiGrid = document.createElement("div");
  emojiGrid.classList.add("emoji-grid");
  const emojisList = [
    "üòÄ",
    "üòÇ",
    "üòç",
    "üëç",
    "üôè",
    "üéâ",
    "üò¢",
    "ü§î",
    "üòé",
    "üò°",
    "üò≠",
    "üòä",
    "üò¥",
    "üí™",
    "üòá",
    "üòú",
    "ü§ó",
    "üòè",
    "üôÑ",
    "üòã",
    "üòå",
    "ü§ê",
    "üò∂",
    "üòë",
    "üò±",
    "üòà",
    "üëª",
    "üíÄ",
    "ü§ñ",
    "üéÉ",
    "üëΩ",
    "üëæ",
    "ü¶Ñ",
    "üê±",
    "üê∂",
    "üê∏",
    "üêµ",
    "üêº",
    "ü¶Å",
    "üêØ",
  ];
  emojisList.forEach((emoji) => {
    const emojiSpan = document.createElement("span");
    emojiSpan.classList.add("emoji");
    emojiSpan.textContent = emoji;
    emojiGrid.appendChild(emojiSpan);
  });
  emojiPicker.appendChild(emojiGrid);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è emojiPicker
function initializeEmojiPicker() {
  populateEmojiPicker();
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ —ç–º–æ–¥–∑–∏
  emojiPicker.addEventListener("click", (e) => {
    if (e.target.classList.contains("emoji")) {
      insertEmoji(e.target.textContent);
      toggleEmojiPicker(false);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
function toggleFileUploadPopup(show = true) {
  if (show) {
    fileUploadPopup.classList.add("active");
  } else {
    fileUploadPopup.classList.remove("active");
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–ª–∞—à–∫–∏ —Å —ç–º–æ–¥–∑–∏
function toggleEmojiPicker(show = true) {
  if (show) {
    emojiPicker.classList.add("active");
  } else {
    emojiPicker.classList.remove("active");
  }
}

// –§—É–Ω–∫—Ü–∏—è –≤—Å—Ç–∞–≤–∫–∏ —Å–º–∞–π–ª–∞ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
function insertEmoji(emoji) {
  const cursorPosition = chatInput.selectionStart;
  const textBefore = chatInput.value.substring(0, cursorPosition);
  const textAfter = chatInput.value.substring(cursorPosition);
  chatInput.value = textBefore + emoji + textAfter;
  chatInput.focus();
  chatInput.selectionStart = cursorPosition + emoji.length;
  chatInput.selectionEnd = cursorPosition + emoji.length;
}

function updateHighlightedMessages() {
  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é –æ–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π
  chatMessages.innerHTML = "";

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —á–∞—Ç
  if (currentChat === null) return;

  const messages = chats[currentChat].messages;

  // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  messages.forEach((messageObj) => {
    if (messageObj.imageUrl) {
      appendImageMessage(messageObj);
    } else if (messageObj.fileName) {
      appendFileMessage(messageObj);
    } else {
      appendMessage(messageObj); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
function handleFiles(files) {
  for (const file of files) {
    if (file.type.startsWith("image/")) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const reader = new FileReader();
      reader.onload = function (e) {
        const imageMessage = {
          text: "", // –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ–∫—Å—Ç
          sender: "user",
          time: getCurrentTime(),
          date: getCurrentDate(), // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
          imageUrl: e.target.result,
        };
        chats[currentChat].messages.push(imageMessage);
        appendImageMessage(imageMessage);
      };
      reader.readAsDataURL(file);
    } else {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ (—Å–∏–º—É–ª—è—Ü–∏—è)
      const fileMessage = {
        text: "", // –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–µ–∫—Å—Ç
        sender: "user",
        time: getCurrentTime(),
        date: getCurrentDate(), // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        fileName: file.name,
        fileSize: formatFileSize(file.size),
      };
      chats[currentChat].messages.push(fileMessage);
      appendFileMessage(fileMessage);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
function formatFileSize(bytes) {
  const sizes = ["–ë", "–ö–ë", "–ú–ë", "–ì–ë", "–¢–ë"];
  if (bytes === 0) return "0 –ë";
  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)), 10);
  return (bytes / Math.pow(1024, i)).toFixed(2) + " " + sizes[i];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∏–Ω–ø—É—Ç–∞ –∏ –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
function createHeaderSearchBar() {
  const chatHeader = document.querySelector(".chat-header");

  const searchContainer = document.createElement("div");
  searchContainer.id = "headerSearchContainer";

  const searchInput = document.createElement("input");
  searchInput.type = "text";
  searchInput.id = "headerSearchInput";
  searchInput.placeholder = "–ü–æ–∏—Å–∫ –ø–æ —á–∞—Ç–∞–º...";

  const searchIcon = document.createElement("span");
  searchIcon.id = "headerSearchIcon";
  searchIcon.classList.add("ri-menu-search-line"); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è CSS-–∏–∫–æ–Ω–∫–∏

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ø—É—Ç –∏ –∏–∫–æ–Ω–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  searchContainer.appendChild(searchInput);
  searchContainer.appendChild(searchIcon);

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
  const searchResults = document.createElement("div");
  searchResults.id = "headerSearchResults";

  searchContainer.appendChild(searchResults);

  // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
  chatHeader.appendChild(searchContainer);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–ø—É—Ç
  searchInput.addEventListener("input", handleSearchInput);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∏–∫–æ–Ω–∫—É –ø–æ–∏—Å–∫–∞
  searchIcon.addEventListener("click", () => {
    const query = searchInput.value.trim();
    if (query !== "") {
      performSearch(query);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å–∫—Ä—ã—Ç–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
function toggleHeaderSearchResults(show = true) {
  const searchResults = document.getElementById("headerSearchResults");
  if (show) {
    searchResults.style.display = "block";
  } else {
    searchResults.style.display = "none";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–ø—É—Ç
function handleSearchInput(e) {
  const query = e.target.value.trim();
  currentSearchQuery = query; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å

  if (query === "") {
    toggleHeaderSearchResults(false); // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    updateHighlightedMessages(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–∏—è
    updateMatchCounts([]); // **–î–æ–±–∞–≤–ª–µ–Ω–æ: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π**
    return;
  }

  performSearch(query); // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ)
  updateHighlightedMessages(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
function performSearch(query) {
  const lowerQuery = query.toLowerCase();
  const results = [];

  // –°–±—Ä–æ—Å –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
  Object.keys(chats).forEach((chatId) => {
    const chat = chats[chatId];
    let matchCount = 0;
    chat.messages.forEach((msg) => {
      if (msg.text && msg.text.toLowerCase().includes(lowerQuery)) {
        matchCount++;
      }
    });
    chat.matchCount = matchCount;
    if (matchCount > 0) {
      results.push({ chatId, matchCount });
    }
  });

  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä—è–¥–æ–º —Å —á–∞—Ç–∞–º–∏
  updateMatchCounts(results);

  // –ò—â–µ–º —Ç–æ–ø-5 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
  const topResults = [];

  Object.keys(chats).forEach((chatId) => {
    const chat = chats[chatId];
    chat.messages.forEach((msg, index) => {
      if (msg.text && msg.text.toLowerCase().includes(lowerQuery)) {
        topResults.push({
          chatId,
          theme: chat.theme,
          message: msg.text,
          messageIndex: index,
          fullMessage: msg.text,
        });
      }
    });
  });

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const limitedResults = topResults.slice(0, 5);

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  displaySearchResults(limitedResults, query);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ä—è–¥–æ–º —Å —á–∞—Ç–æ–º
function updateMatchCounts(results) {
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—á–µ—Ç—á–∏–∫–∏
  const existingCounts = document.querySelectorAll(".match-count");
  existingCounts.forEach((count) => count.remove());

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
  results.forEach((result) => {
    const chatListItem = document.querySelector(
      `.chat-list-item[data-chat="${result.chatId}"]`
    );
    if (chatListItem) {
      const chatInfo = chatListItem.querySelector(".chat-info");
      const chatTitle = chatInfo.querySelector("h4");
      const existingMatch = chatTitle.querySelector(".match-count");
      if (existingMatch) {
        existingMatch.textContent = `(${result.matchCount})`;
      } else {
        const matchSpan = document.createElement("span");
        matchSpan.classList.add("match-count");
        matchSpan.textContent = `(${result.matchCount})`;
        chatTitle.appendChild(matchSpan);
      }
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
function displaySearchResults(results, query) {
  const searchResults = document.getElementById("headerSearchResults");
  searchResults.innerHTML = "";

  if (results.length === 0) {
    toggleHeaderSearchResults(false);
    renderMessages(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–∏—è
    return;
  }

  results.forEach((result) => {
    const item = document.createElement("div");
    item.classList.add("header-search-result-item");
    // –í—ã–¥–µ–ª—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    const regex = new RegExp(`(${escapeRegExp(query)})`, "gi");
    const highlightedText = result.message.replace(
      regex,
      '<span class="header-highlight">$1</span>'
    );
    item.innerHTML = `<strong>${getThemeTitle(
      getThemeKey(result.theme)
    )}</strong>: ${highlightedText}`;
    item.addEventListener("click", () => {
      navigateToMatch(result.chatId, result.messageIndex, query);
      toggleHeaderSearchResults(false);
    });
    searchResults.appendChild(item);
  });

  toggleHeaderSearchResults(true);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
function navigateToMatch(chatId, messageIndex, query) {
  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω—É–∂–Ω—ã–π —á–∞—Ç
  switchChat(chatId);

  // –ñ–¥—ë–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
  setTimeout(() => {
    const messageDivs = chatMessages.querySelectorAll(".message-content");
    if (messageDivs[messageIndex]) {
      const messageText = messageDivs[messageIndex].innerText.toLowerCase();
      const queryLower = query.toLowerCase();
      const position = messageText.indexOf(queryLower);
      if (position !== -1) {
        messageDivs[messageIndex].scrollIntoView({
          behavior: "smooth",
          block: "center",
        });
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        messageDivs[messageIndex].classList.add("highlight");
        setTimeout(() => {
          messageDivs[messageIndex].classList.remove("highlight");
        }, 2000);
      }
    }
  }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö
function escapeRegExp(string) {
  return string.replace(/[.*+\-?^${}()|[\]\\]/g, "\\$&");
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —á–∞—Ç–µ
function appendImageMessage(messageObj) {
  const currentDate = messageObj.date || getCurrentDate();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  if (lastAppendedDate !== currentDate) {
    appendDateDivider(currentDate);
    lastAppendedDate = currentDate;
  }

  const messageDiv = document.createElement("div");
  messageDiv.classList.add("message", messageObj.sender);

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤—Ä–µ–º–µ–Ω–∏
  const messageContentWrapper = document.createElement("div");
  messageContentWrapper.classList.add("message-wrapper");

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const messageContent = document.createElement("div");
  messageContent.classList.add("message-content");

  const img = document.createElement("img");
  img.src = messageObj.imageUrl;
  img.alt = "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ";
  img.style.maxWidth = "100%";
  img.style.borderRadius = "10px";

  messageContent.appendChild(img);

  // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
  const messageTime = document.createElement("div");
  messageTime.classList.add("message-time");
  messageTime.textContent = messageObj.time;

  messageContentWrapper.appendChild(messageContent);
  messageContentWrapper.appendChild(messageTime);

  // –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä
  const avatarDiv = document.createElement("div");
  avatarDiv.classList.add("avatar");

  // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
  messageDiv.appendChild(messageContentWrapper);
  messageDiv.appendChild(avatarDiv);

  chatMessages.appendChild(messageDiv);

  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
  chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ —á–∞—Ç–µ (—Å–∏–º—É–ª—è—Ü–∏—è)
function appendFileMessage(messageObj) {
  const currentDate = messageObj.date || getCurrentDate();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–∏ –¥–∞—Ç–∞, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  if (lastAppendedDate !== currentDate) {
    appendDateDivider(currentDate);
    lastAppendedDate = currentDate;
  }

  const messageDiv = document.createElement("div");
  messageDiv.classList.add("message", messageObj.sender);

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏
  const messageContentWrapper = document.createElement("div");
  messageContentWrapper.classList.add("message-wrapper");

  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞
  const messageContent = document.createElement("div");
  messageContent.classList.add("message-content");

  const fileIcon = document.createElement("span");
  fileIcon.textContent = "üìÑ"; // –ò–∫–æ–Ω–∫–∞ —Ñ–∞–π–ª–∞
  fileIcon.style.marginRight = "10px";

  const fileInfo = document.createElement("span");
  fileInfo.textContent = `${messageObj.fileName} (${messageObj.fileSize})`;

  messageContent.appendChild(fileIcon);
  messageContent.appendChild(fileInfo);

  // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞
  const messageTime = document.createElement("div");
  messageTime.classList.add("message-time");
  messageTime.textContent = messageObj.time;

  messageContentWrapper.appendChild(messageContent);
  messageContentWrapper.appendChild(messageTime);

  // –°–æ–∑–¥–∞–µ–º –∞–≤–∞—Ç–∞—Ä
  const avatarDiv = document.createElement("div");
  avatarDiv.classList.add("avatar");

  // –°–æ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏—è
  messageDiv.appendChild(messageContentWrapper);
  messageDiv.appendChild(avatarDiv);

  chatMessages.appendChild(messageDiv);

  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —á–∞—Ç –≤–Ω–∏–∑
  chatMessages.scrollTop = chatMessages.scrollHeight;
}

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = () => {
  loadData();
  initializeChat();
  initializeEmojiPicker();
};
